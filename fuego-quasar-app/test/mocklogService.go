// Code generated by MockGen. DO NOT EDIT.
// Source: .\fuego-quasar-app\internal\core\domain\port\logService.go

// Package mock_port is a generated GoMock package.
package service

import (
	reflect "reflect"

	"github.com/golang/mock/gomock"
)

// MockLogService is a mock of LogService interface.
type MockLogService struct {
	ctrl     *gomock.Controller
	recorder *MockLogServiceMockRecorder
}

// MockLogServiceMockRecorder is the mock recorder for MockLogService.
type MockLogServiceMockRecorder struct {
	mock *MockLogService
}

// NewMockLogService creates a new mock instance.
func NewMockLogService(ctrl *gomock.Controller) *MockLogService {
	mock := &MockLogService{ctrl: ctrl}
	mock.recorder = &MockLogServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLogService) EXPECT() *MockLogServiceMockRecorder {
	return m.recorder
}

// Debug mocks base method.
func (m *MockLogService) Debug(msg string, args ...any) {
	m.ctrl.T.Helper()
	varargs := []interface{}{msg}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Debug", varargs...)
}

// Debug indicates an expected call of Debug.
func (mr *MockLogServiceMockRecorder) Debug(msg interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{msg}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Debug", reflect.TypeOf((*MockLogService)(nil).Debug), varargs...)
}

// Error mocks base method.
func (m *MockLogService) Error(msg string, args ...any) {
	
}

// Error indicates an expected call of Error.
func (mr *MockLogServiceMockRecorder) Error(msg interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{msg}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockLogService)(nil).Error), varargs...)
}

// Info mocks base method.
func (m *MockLogService) Info(msg string, args ...any) {
	
}

// Info indicates an expected call of Info.
func (mr *MockLogServiceMockRecorder) Info(msg interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{msg}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockLogService)(nil).Info), varargs...)
}

// Warn mocks base method.
func (m *MockLogService) Warn(msg string, args ...any) {
	m.ctrl.T.Helper()
	varargs := []interface{}{msg}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "Warn", varargs...)
}

// Warn indicates an expected call of Warn.
func (mr *MockLogServiceMockRecorder) Warn(msg interface{}, args ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{msg}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Warn", reflect.TypeOf((*MockLogService)(nil).Warn), varargs...)
}
